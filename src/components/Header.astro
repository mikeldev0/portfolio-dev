---
import HomeIcon from "../icons/HomeIcon.astro";
import ThemeToggle from "./ThemeToggle.astro";
import LanguageSelector from "./LanguageSelector.astro";
import CloseMenuIcon from "../icons/CloseMenuIcon.astro";

const navItems = [
    {
        title: "Experiencia",
        key: "nav.experience",
        label: "experiencia",
        url: "/#experiencia",
    },
    {
        title: "Proyectos",
        key: "nav.projects",
        label: "proyectos",
        url: "/#proyectos",
    },
    {
        title: "Sobre mí",
        key: "nav.about",
        label: "sobre-mi",
        url: "/#sobre-mi",
    },
    {
        title: "Contacto",
        key: "nav.contact",
        label: "contacto",
        url: "mailto:mikel@mikeldev.com",
    },
];
---

<header
    class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2"
>
    <nav
        class="flex px-3 text-xs md:text-sm font-medium rounded-full text-gray-800 dark:text-gray-200 justify-center items-center w-full md:w-auto"
    >
        <div class="mr-2 hover:scale-125 transition">
            <HomeIcon />
        </div>
        <!-- Desktop nav -->
        <div class="hidden md:flex items-center">
            {
                navItems.map((link) => (
                    <a
                        class="relative block px-2 py-2 transition hover:text-purple-500 dark:hover:text-purple-400 text-center"
                        aria-label={link.label}
                        href={link.url}
                        data-i18n={link.key}
                    >
                        {link.title}
                    </a>
                ))
            }
        </div>
        <div class="flex items-center ml-auto md:ml-2 md:mr-0 absolute right-12 top-1/2 -translate-y-1/2 md:static md:translate-y-0">
            <ThemeToggle />
            <LanguageSelector />
        </div>
        <!-- Mobile burger -->
        <div class="md:hidden ml-auto">
            <button id="burger-btn" aria-label="Abrir menú" class="p-2 focus:outline-none">
                <svg width="28" height="28" fill="none" stroke="currentColor" stroke-width="2">
                    <line x1="5" y1="8" x2="23" y2="8" />
                    <line x1="5" y1="14" x2="23" y2="14" />
                    <line x1="5" y1="20" x2="23" y2="20" />
                </svg>
            </button>
        </div>
    </nav>
    <!-- Mobile full screen nav -->
    <div id="mobile-nav"
        class="fixed inset-0 bg-white/30 dark:bg-gray-900/30 bg-opacity-95 flex flex-col items-center justify-center z-50 transition-opacity duration-300 opacity-0 pointer-events-none"
        style="backdrop-filter: blur(6px); -webkit-backdrop-filter: blur(6px);"
    >
        <button id="close-mobile-nav" aria-label="Cerrar menú" class="absolute top-6 right-6 p-2">
            <CloseMenuIcon />
        </button>
        <div class="flex flex-col gap-8 text-2xl font-semibold text-gray-800 dark:text-gray-200">
            {
                navItems.map((link) => (
                    <a
                        class="transition hover:text-purple-500 dark:hover:text-purple-400 text-center"
                        aria-label={link.label}
                        href={link.url}
                        data-i18n={link.key}
                        onclick="document.getElementById('mobile-nav').classList.remove('opacity-100','pointer-events-auto');document.getElementById('mobile-nav').classList.add('opacity-0','pointer-events-none');"
                    >
                        {link.title}
                    </a>
                ))
            }
        </div>
    </div>
    <script>
        const burgerBtn = document.getElementById('burger-btn');
        const mobileNav = document.getElementById('mobile-nav');
        const closeBtn = document.getElementById('close-mobile-nav');
        if (burgerBtn && mobileNav) {
            burgerBtn.onclick = () => {
                mobileNav.classList.remove('opacity-0','pointer-events-none');
                mobileNav.classList.add('opacity-100','pointer-events-auto');
            };
        }
        if (closeBtn && mobileNav) {
            closeBtn.onclick = () => {
                mobileNav.classList.remove('opacity-100','pointer-events-auto');
                mobileNav.classList.add('opacity-0','pointer-events-none');
            };
        }
    </script>
    <style>
        #mobile-nav.opacity-0 {
            opacity: 0;
            pointer-events: none;
        }
        #mobile-nav.opacity-100 {
            opacity: 1;
            pointer-events: auto;
        }
    </style>

    <script>
        document.addEventListener("astro:page-load", () => {
            const sections = document.querySelectorAll("section");
            const navItems = document.querySelectorAll("header nav a");

            const callback = (entries: any[]) => {
                entries.forEach((entry) => {
                    if (entry.isIntersecting) {
                        navItems.forEach((item) => {
                            if (
                                item.getAttribute("aria-label") ==
                                entry.target.id
                            ) {
                                item.classList.add("text-yellow-500");
                            } else {
                                item.classList.remove("text-yellow-500");
                            }
                        });
                    }
                });
            };

            const observer = new IntersectionObserver(callback, {
                root: null,
                rootMargin: "0px",
                threshold: 0.3,
            });

            sections.forEach((section) => {
                observer.observe(section);
            });

            // Cleanup function
            document.onvisibilitychange = () => {
                if (document.visibilityState === "hidden") {
                    observer.disconnect();
                } else {
                    sections.forEach((section) => {
                        observer.observe(section);
                    });
                }
            };
        });
    </script>

    <style>
        nav {
            animation: nav-shadow 1s linear both;
            animation-timeline: scroll();
            animation-range: 0 100px;
        }

        @keyframes nav-shadow {
            to {
                box-shadow: 0 10px 32px 0 rgba(31, 41, 55, 0.15);
                backdrop-filter: blur(6px);
                -webkit-backdrop-filter: blur(6px);
                background: rgba(255, 255, 255, 0.1);
                border-radius: 9999px;
            }
        }
    </style>
</header>
